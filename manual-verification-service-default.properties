# db.dbuser.password 
# activemq.password
# activemq.host
# activemq.core.port
# mosip.regproc.client.secret
# mosip.api.internal.url
# keycloak.internal.url
# keycloak.admin.password
# realmId

# mosip.api.internal.url=https://api-internal.niradev.idencode.link
# keycloak.internal.url=https://iam.niradev.idencode.link
# keycloak.admin.password=nJeF39PsqD

#auth
manual.verification.auth.url=${mosip.api.internal.url}/v1/authmanager/authenticate/internal/useridPwd
manual.verification.user.details.url=${keycloak.external.url}/auth/admin/realms/mosip/roles/{role-name}/users?enabled=true
manual.verification.get.template.url=${mosip.api.internal.url}/v1/masterdata/templates

#id-repo
manual.verification.id.repo.url=${mosip.api.internal.url}/idrepository/v1/identity/idvid/

#keykloak
mosip.iam.open-id-url=${keycloak.external.url}/auth/realms/{realmId}/protocol/openid-connect/
mosip.iam.master.realm-id=master
mosip.keycloak.admin.client.id=admin-cli
mosip.keycloak.admin.user.id=admin
mosip.keycloak.admin.secret.key=${keycloak.admin.password}

manual.verification.officer.roles=MVS_OFFICER,MVS_SUPERVISOR,MVS_DISTRICT_OFFICER,MVS_LEGAL_OFFICER,MVS_EXECUTIVE_DIRECTOR
manual.verification.data.share.encryption=false
manual.verification.create.packet.url=${mosip.api.internal.url}/commons/v1/packetmanager/createPacket
manual.verification.latest.schema.url=${mosip.api.internal.url}/v1/syncdata/latestidschema
#${mosip.kernel.notification.url}
manual.verification.email.notification.url=${mosip.api.internal.url}/v1/notifier/email/send
manual.verification.sms.notification.url=${mosip.api.internal.url}/v1/notifier/sms/send
manual.verification.document.upload.process=MVS_DOC
manual.verification.cron.expression=0 0/3 * * * ?
manual.verification.email.template.code=RPR_MVS_INT_EMAIL
manual.verification.sms.template.code=RPR_MVS_INT_SMS
manual.verification.interview.valid.days=60

#Service
NEW=New registrations
RENEWAL=Renewal of card
LOST=Lost/ Replacement of card
UPDATE=Change of Particulars
FIRSTID=GetFirst ID

#Service Types
Update=Change of Particulars
By_Birth_/Descent=Registration of citizens by birth
Citizenship_under_the_Article_9=Citizenship under the Article 9
By_Naturalization=Registration of Citizens by Naturalization
By_Registration=Registration of Citizens by Registration
Dual_Citizenship=Registration of Dual Citizens
Renewal=Renewal of a card
Replacement=Lost/ Replacement of card
Add_Name=Adding a Name
Remove_Name=Removing a name
Change_Order_of_Names=Change of Order of Names
Complete_Name_Change=Complete Change of Name
Change_DOB=Change of Data of Birth
Change_DOB_>_4_years=Change of Date of Birth > 4 years
Change_Residence_Adult=Change in place of Residence of Adult
Change_Residence_Child=Change in Place of Residence of Child
Change_Birth_Place_Adult=Change in place of Birth of Adult
Change_Birth_Place_Child=Change in Place of Birth of Child
Correct_Origin_Adult=Correction in place of Origin of Adult
Correct_Origin_Child=Correction in Place of Origin of Child
Change_Citizenship_Type=Change in citizenship type
Change_Polling_Station=Change in polling station
Add_Spouse=Add a spouse
Remove_Spouse=Remove a spouse
Change_Father_Details=Change the details of the father
Change_Mother_Details=Change the details of the mother
Correct_NIN_Error=Correction of error regarding NIN
GetFirst_ID=GetFirst ID

#auth adapter
mosip.auth.adapter.impl.basepackage=io.mosip.kernel.auth.defaultadapter
#mosip.global.end-points=/**/*
auth.server.admin.issuer.uri=${keycloak.external.url}/auth/realms/
mosip.iam.adapter.appid=regproc
mosip.iam.adapter.clientid=mosip-regproc-client
mosip.iam.adapter.clientsecret=${mosip.regproc.client.secret}
mosip.kernel.auth.adapter.ssl-bypass=true
mosip.kernel.auth.appid-realm-map={regproc:'mosip'}
mosip.kernel.auth.appids.realm.map={regproc:'mosip'}
#not needed (available in application-default.properties)
auth.server.admin.allowed.audience=mosip-regproc-client

#roles
manual.verification.roles.getApplicationsForUser=MVS_OFFICER,MVS_SUPERVISOR,MVS_DISTRICT_OFFICER,MVS_LEGAL_OFFICER,MVS_EXECUTIVE_DIRECTOR
manual.verification.roles.searchApplications=MVS_OFFICER,MVS_SUPERVISOR,MVS_DISTRICT_OFFICER,MVS_LEGAL_OFFICER,MVS_EXECUTIVE_DIRECTOR
manual.verification.roles.getApplicationDetails=MVS_OFFICER,MVS_SUPERVISOR,MVS_DISTRICT_OFFICER,MVS_LEGAL_OFFICER,MVS_EXECUTIVE_DIRECTOR
manual.verification.roles.updateApplicationStatus=MVS_OFFICER,MVS_SUPERVISOR,MVS_DISTRICT_OFFICER,MVS_LEGAL_OFFICER,MVS_EXECUTIVE_DIRECTOR
manual.verification.roles.scheduleInterview=MVS_DISTRICT_OFFICER,MVS_LEGAL_OFFICER,MVS_EXECUTIVE_DIRECTOR
manual.verification.roles.uploadDocuments=MVS_DISTRICT_OFFICER
manual.verification.roles.fetchDemographicDetails=MVS_OFFICER,MVS_SUPERVISOR,MVS_DISTRICT_OFFICER,MVS_LEGAL_OFFICER,MVS_EXECUTIVE_DIRECTOR

#officer assignment
manual.verification.officerAssignment.serviceTypesForLegalOfficer=completeChangeofName,\
                                                                  changeInPlaceOfOrigin,\
                                                                  changeInCitizenshipType,\
                                                                  changeDetailsOfFather,\
                                                                  changeDetailsOfMother
manual.verification.officerAssignment.updateDOBServiceType=changeOfDateOfBirth

#activemq
registration.processor.verification.queue.username=artemis
registration.processor.verification.queue.password=${activemq.password}
registration.processor.verification.queue.url=tcp://${activemq.host}:${activemq.core.port}

#postgres
spring.datasource.url=jdbc:postgresql://postgres-postgresql.postgres:5432/mosip_regprc?currentSchema=regprc
spring.datasource.username=regprcuser
spring.datasource.password=${db.dbuser.password}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
